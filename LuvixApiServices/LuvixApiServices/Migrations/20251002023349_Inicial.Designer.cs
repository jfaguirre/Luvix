// <auto-generated />
using System;
using LuvixApiServices.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LuvixApiServices.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251002023349_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LuvixApiServices.Models.CategoriaTienda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoriasTienda");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaCreacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Producto"
                        },
                        new
                        {
                            Id = 2,
                            FechaCreacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Servicio"
                        });
                });

            modelBuilder.Entity("LuvixApiServices.Models.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdTienda")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPublicacion");

                    b.HasIndex("IdTienda");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("LuvixApiServices.Models.ImagenPublicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaSubida")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("int");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<string>("UrlImagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdPublicacion");

                    b.ToTable("ImagenesPublicacion");
                });

            modelBuilder.Entity("LuvixApiServices.Models.Mensaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdTiendaDestinatario")
                        .HasColumnType("int");

                    b.Property<int?>("IdTiendaRemitente")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioDestinatario")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioRemitente")
                        .HasColumnType("int");

                    b.Property<bool>("Leido")
                        .HasColumnType("bit");

                    b.Property<string>("MensajeTexto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTiendaDestinatario");

                    b.HasIndex("IdTiendaRemitente");

                    b.HasIndex("IdUsuarioDestinatario");

                    b.HasIndex("IdUsuarioRemitente");

                    b.ToTable("Mensajes");
                });

            modelBuilder.Entity("LuvixApiServices.Models.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permisos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Puede editar usuario",
                            Nombre = "EditarUsuario"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Puede eliminar usuarios",
                            Nombre = "EliminarUsuario"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Puede bloquear usuarios",
                            Nombre = "BloquearUsuario"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Puede desbloquear usuarios",
                            Nombre = "DesbloquearUsuario"
                        });
                });

            modelBuilder.Entity("LuvixApiServices.Models.Publicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTienda")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPublicacion")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTienda");

                    b.HasIndex("IdTipoPublicacion");

                    b.ToTable("Publicaciones");
                });

            modelBuilder.Entity("LuvixApiServices.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Editor"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Vendedor"
                        });
                });

            modelBuilder.Entity("LuvixApiServices.Models.RolPermiso", b =>
                {
                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<int>("PermisoId")
                        .HasColumnType("int");

                    b.HasKey("RolId", "PermisoId");

                    b.HasIndex("PermisoId");

                    b.ToTable("RolPermisos");

                    b.HasData(
                        new
                        {
                            RolId = 1,
                            PermisoId = 1
                        },
                        new
                        {
                            RolId = 1,
                            PermisoId = 2
                        },
                        new
                        {
                            RolId = 1,
                            PermisoId = 3
                        },
                        new
                        {
                            RolId = 1,
                            PermisoId = 4
                        });
                });

            modelBuilder.Entity("LuvixApiServices.Models.SeguidorTiendaATienda", b =>
                {
                    b.Property<int>("IdTiendaSeguidora")
                        .HasColumnType("int");

                    b.Property<int>("IdTiendaSeguida")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaSeguimiento")
                        .HasColumnType("datetime2");

                    b.HasKey("IdTiendaSeguidora", "IdTiendaSeguida");

                    b.HasIndex("IdTiendaSeguida");

                    b.ToTable("SeguidoresTiendaATienda");
                });

            modelBuilder.Entity("LuvixApiServices.Models.SeguidorUsuarioATienda", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdTienda")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaSeguimiento")
                        .HasColumnType("datetime2");

                    b.HasKey("IdUsuario", "IdTienda");

                    b.HasIndex("IdTienda");

                    b.ToTable("SeguidoresUsuarioATienda");
                });

            modelBuilder.Entity("LuvixApiServices.Models.SeguidorUsuarioAUsuario", b =>
                {
                    b.Property<int>("IdSeguidor")
                        .HasColumnType("int");

                    b.Property<int>("IdSeguido")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaSeguimiento")
                        .HasColumnType("datetime2");

                    b.HasKey("IdSeguidor", "IdSeguido");

                    b.HasIndex("IdSeguido");

                    b.ToTable("SeguidoresUsuarioAUsuario");
                });

            modelBuilder.Entity("LuvixApiServices.Models.SubCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaTiendaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaTiendaId");

                    b.ToTable("Subcategorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaTiendaId = 1,
                            Descripcion = "Frutas (manzanas, bananas, naranjas), verduras (lechuga, tomates, papas), carne, pescado.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Productos frescos"
                        },
                        new
                        {
                            Id = 2,
                            CategoriaTiendaId = 1,
                            Descripcion = "Tortas, pasteles, cupcakes, postres decorados y repostería artesanal.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Pastelería"
                        },
                        new
                        {
                            Id = 3,
                            CategoriaTiendaId = 1,
                            Descripcion = "Collares, pulseras, aretes, anillos y accesorios decorativos asequibles.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Bisutería"
                        },
                        new
                        {
                            Id = 4,
                            CategoriaTiendaId = 1,
                            Descripcion = "Herramientas, clavos, tornillos, pinturas, materiales eléctricos y construcción.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Ferretería"
                        },
                        new
                        {
                            Id = 5,
                            CategoriaTiendaId = 1,
                            Descripcion = "Medicamentos, productos de higiene, primeros auxilios y artículos médicos.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Farmacia"
                        },
                        new
                        {
                            Id = 6,
                            CategoriaTiendaId = 1,
                            Descripcion = "Prendas para hombres, mujeres y niños: camisas, pantalones, vestidos, ropa interior.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Ropa"
                        },
                        new
                        {
                            Id = 7,
                            CategoriaTiendaId = 1,
                            Descripcion = "Zapatos, botas, sandalias, tenis y calzado deportivo o formal.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Calzado"
                        },
                        new
                        {
                            Id = 8,
                            CategoriaTiendaId = 1,
                            Descripcion = "Objetos hechos a mano: cerámica, madera, tejidos, decoración cultural.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Artesanías"
                        },
                        new
                        {
                            Id = 9,
                            CategoriaTiendaId = 1,
                            Descripcion = "Comidas tradicionales locales: tamales, pupusas, atoles, platos regionales.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Alimentos típicos"
                        },
                        new
                        {
                            Id = 10,
                            CategoriaTiendaId = 1,
                            Descripcion = "Leche, queso, yogur, mantequilla, crema y derivados lácteos.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Productos lácteos"
                        },
                        new
                        {
                            Id = 11,
                            CategoriaTiendaId = 1,
                            Descripcion = "Dispositivos electrónicos como tablets, cámaras, drones y gadgets.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Productos tecnológicos"
                        },
                        new
                        {
                            Id = 12,
                            CategoriaTiendaId = 1,
                            Descripcion = "Venta de productos en grandes cantidades a bajo costo para revender.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Tienda mayorista"
                        },
                        new
                        {
                            Id = 13,
                            CategoriaTiendaId = 1,
                            Descripcion = "Venta directa al consumidor final de productos variados.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Tienda minorista"
                        },
                        new
                        {
                            Id = 14,
                            CategoriaTiendaId = 1,
                            Descripcion = "Especializada en la venta de pupusas rellenas con queso, frijol, chicharrón, etc.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Pupusería"
                        },
                        new
                        {
                            Id = 15,
                            CategoriaTiendaId = 1,
                            Descripcion = "Juguetes para niños: muñecos, juegos educativos, rompecabezas, vehículos.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Juguetería"
                        },
                        new
                        {
                            Id = 16,
                            CategoriaTiendaId = 1,
                            Descripcion = "Telas, hilos, telares, productos para confección y diseño de ropa.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Textil"
                        },
                        new
                        {
                            Id = 17,
                            CategoriaTiendaId = 1,
                            Descripcion = "Sillas, mesas, camas, closets, muebles para hogar u oficina.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Muebles"
                        },
                        new
                        {
                            Id = 18,
                            CategoriaTiendaId = 1,
                            Descripcion = "Cerveza artesanal, barriles, botellas, marcas locales e importadas.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Cervecería"
                        },
                        new
                        {
                            Id = 19,
                            CategoriaTiendaId = 1,
                            Descripcion = "Puertas, rejas, escaleras, techos y estructuras de acero o aluminio.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Estructuras metálicas"
                        },
                        new
                        {
                            Id = 20,
                            CategoriaTiendaId = 1,
                            Descripcion = "Arroz, azúcar, frijoles, aceite, sal, fósforos, productos esenciales.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Productos de la canasta básica"
                        },
                        new
                        {
                            Id = 21,
                            CategoriaTiendaId = 1,
                            Descripcion = "Relojes de pulsera, de pared, cronómetros y accesorios de tiempo.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Relojería"
                        },
                        new
                        {
                            Id = 22,
                            CategoriaTiendaId = 1,
                            Descripcion = "Establecimiento general que vende una variedad de productos de consumo diario.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Tienda"
                        },
                        new
                        {
                            Id = 23,
                            CategoriaTiendaId = 1,
                            Descripcion = "Pizzas al horno, porciones, familiares, con diferentes ingredientes y sabores.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Pizzería"
                        },
                        new
                        {
                            Id = 24,
                            CategoriaTiendaId = 1,
                            Descripcion = "Impresoras láser, inalámbricas, multifuncionales y suministros (tinta, papel).",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Impresoras"
                        },
                        new
                        {
                            Id = 25,
                            CategoriaTiendaId = 1,
                            Descripcion = "Laptops, PCs, componentes, monitores, teclados y periféricos.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Computadoras"
                        },
                        new
                        {
                            Id = 26,
                            CategoriaTiendaId = 1,
                            Descripcion = "Tacos, burritos, quesadillas, tortillas frescas y salsas caseras.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Taquería"
                        },
                        new
                        {
                            Id = 27,
                            CategoriaTiendaId = 1,
                            Descripcion = "Café, capuchino, expresso, pastelillos, jugos naturales y snacks.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Cafetería"
                        },
                        new
                        {
                            Id = 28,
                            CategoriaTiendaId = 1,
                            Descripcion = "Venta al por mayor de telas para confección, moda o tapicería.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Depósito de telas"
                        },
                        new
                        {
                            Id = 29,
                            CategoriaTiendaId = 1,
                            Descripcion = "Refrescos, jugos, agua embotellada, cerveza, energizantes en volumen.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Depósito de bebidas"
                        },
                        new
                        {
                            Id = 30,
                            CategoriaTiendaId = 1,
                            Descripcion = "Gran establecimiento que ofrece alimentos, limpieza, ropa y más.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Supermercado"
                        },
                        new
                        {
                            Id = 31,
                            CategoriaTiendaId = 1,
                            Descripcion = "Hamburguesas, hot dogs, papas fritas, pollo frito, comida para llevar.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Comida rápida"
                        },
                        new
                        {
                            Id = 32,
                            CategoriaTiendaId = 1,
                            Descripcion = "Chocolates finos, bombones, trufas, barras y dulces hechos a mano.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Chocolate artesanal"
                        },
                        new
                        {
                            Id = 33,
                            CategoriaTiendaId = 1,
                            Descripcion = "Huevos, pollo, gallinas, pavos y subproductos avícolas frescos.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Productos avícolas"
                        },
                        new
                        {
                            Id = 34,
                            CategoriaTiendaId = 1,
                            Descripcion = "Jabón, champú, cepillo dental, toallas higiénicas, desodorante.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Higiene y cuidado personal"
                        },
                        new
                        {
                            Id = 35,
                            CategoriaTiendaId = 1,
                            Descripcion = "Pan, bollos, pan dulce, pan de molde, baguettes y productos horneados.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Panadería"
                        },
                        new
                        {
                            Id = 36,
                            CategoriaTiendaId = 1,
                            Descripcion = "Refrigeradores, estufas, licuadoras, freidoras, lavadoras, microondas.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Electrodomésticos"
                        },
                        new
                        {
                            Id = 37,
                            CategoriaTiendaId = 1,
                            Descripcion = "Utensilios, ollas, sartenes, platos, cubiertos y herramientas de cocina.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Artículos de cocina"
                        },
                        new
                        {
                            Id = 38,
                            CategoriaTiendaId = 1,
                            Descripcion = "Decoración interior, lámparas, cuadros, alfombras, muebles pequeños.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Muebles y decoración"
                        },
                        new
                        {
                            Id = 39,
                            CategoriaTiendaId = 1,
                            Descripcion = "Gorras, bolsos, cinturones, lentes de sol, bufandas y llaveros.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Accesorios"
                        },
                        new
                        {
                            Id = 40,
                            CategoriaTiendaId = 1,
                            Descripcion = "Celulares, smartphones, accesorios, fundas, cargadores, audífonos.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Dispositivos móviles"
                        },
                        new
                        {
                            Id = 41,
                            CategoriaTiendaId = 1,
                            Descripcion = "Bocinas, audífonos, televisores, proyectores, equipos de sonido.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Audio y vídeo"
                        },
                        new
                        {
                            Id = 42,
                            CategoriaTiendaId = 1,
                            Descripcion = "Videojuegos, consolas, juegos de mesa, cartas coleccionables.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Juegos y entretenimiento"
                        },
                        new
                        {
                            Id = 43,
                            CategoriaTiendaId = 1,
                            Descripcion = "Analgésicos, antihistamínicos, medicinas sin receta médica.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Medicamentos de venta libre"
                        },
                        new
                        {
                            Id = 44,
                            CategoriaTiendaId = 1,
                            Descripcion = "Multivitamínicos, proteínas, hierro, calcio, omega-3 y energía.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Vitaminas y suplementos"
                        },
                        new
                        {
                            Id = 45,
                            CategoriaTiendaId = 1,
                            Descripcion = "Crema hidratante, protector solar, limpiadores faciales, exfoliantes.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Productos de cuidado de la piel"
                        },
                        new
                        {
                            Id = 46,
                            CategoriaTiendaId = 1,
                            Descripcion = "Balones, raquetas, pesas, ropa deportiva, calzado para ejercicio.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Equipamiento deportivo"
                        },
                        new
                        {
                            Id = 47,
                            CategoriaTiendaId = 1,
                            Descripcion = "Comida, collares, juguetes, camas, productos de higiene animal.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Suministros para mascotas"
                        },
                        new
                        {
                            Id = 48,
                            CategoriaTiendaId = 1,
                            Descripcion = "Cuadernos, lápices, plumas, marcadores, material escolar y de oficina.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Papelería"
                        },
                        new
                        {
                            Id = 49,
                            CategoriaTiendaId = 1,
                            Descripcion = "Macetas, tierra, plantas, herramientas, abonos y riego.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Artículos de jardinería"
                        },
                        new
                        {
                            Id = 50,
                            CategoriaTiendaId = 1,
                            Descripcion = "Destornilladores, martillos, sierras, cinta métrica, nivel, taladros.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Herramientas para el hogar"
                        },
                        new
                        {
                            Id = 51,
                            CategoriaTiendaId = 1,
                            Descripcion = "Libros, revistas, DVDs, música, libros usados o nuevos.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Libros y medios"
                        },
                        new
                        {
                            Id = 52,
                            CategoriaTiendaId = 1,
                            Descripcion = "Venta de flores naturales, arreglos florales, ramos para eventos y decoración.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Floristería"
                        },
                        new
                        {
                            Id = 53,
                            CategoriaTiendaId = 1,
                            Descripcion = "Dulces artesanales, confites, productos tradicionales y golosinas típicas.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Pandulce"
                        },
                        new
                        {
                            Id = 54,
                            CategoriaTiendaId = 1,
                            Descripcion = "Tienda de abarrotes con productos variados: alimentos, limpieza, bebidas y más.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Miscelánea"
                        },
                        new
                        {
                            Id = 55,
                            CategoriaTiendaId = 1,
                            Descripcion = "Venta de vidrios, espejos, marcos, cristales para ventanas y puertas.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Vidriería"
                        },
                        new
                        {
                            Id = 56,
                            CategoriaTiendaId = 1,
                            Descripcion = "Materiales industriales, agrícolas o de construcción por mayor o menor.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Venta de materia prima"
                        },
                        new
                        {
                            Id = 57,
                            CategoriaTiendaId = 1,
                            Descripcion = "Venta de barras, alambres, clavos, acero y otros productos metálicos.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Barretería"
                        },
                        new
                        {
                            Id = 58,
                            CategoriaTiendaId = 1,
                            Descripcion = "Especializado en comidas preparadas: platos fuertes, menús diarios, comida gourmet.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Restaurante"
                        },
                        new
                        {
                            Id = 59,
                            CategoriaTiendaId = 1,
                            Descripcion = "Helados, sorbetes, nieves, paletas y postres helados artesanales.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Sorbetería"
                        },
                        new
                        {
                            Id = 60,
                            CategoriaTiendaId = 1,
                            Descripcion = "Venta de insumos agrícolas: semillas, fertilizantes, plaguicidas, herramientas.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Agroservicio"
                        },
                        new
                        {
                            Id = 61,
                            CategoriaTiendaId = 1,
                            Descripcion = "Combustible, aceite, lubricantes, neumáticos y productos automotrices.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Gasolinera"
                        },
                        new
                        {
                            Id = 62,
                            CategoriaTiendaId = 1,
                            Descripcion = "Pollos, gallinas, pavos, huevos fértiles y aves vivas o procesadas.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Venta de aves"
                        },
                        new
                        {
                            Id = 63,
                            CategoriaTiendaId = 1,
                            Descripcion = "Automóviles nuevos o usados, venta directa o financiada.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Venta de autos"
                        },
                        new
                        {
                            Id = 64,
                            CategoriaTiendaId = 1,
                            Descripcion = "Motocicletas nuevas o usadas, accesorios y repuestos.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Venta de motos"
                        },
                        new
                        {
                            Id = 65,
                            CategoriaTiendaId = 1,
                            Descripcion = "Pinturas especiales para vehículos, barnices, selladores y equipo de pintado.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Pintura automotriz"
                        },
                        new
                        {
                            Id = 66,
                            CategoriaTiendaId = 1,
                            Descripcion = "Tejas artesanales de barro cocido para techos tradicionales.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Teja de barro"
                        },
                        new
                        {
                            Id = 67,
                            CategoriaTiendaId = 1,
                            Descripcion = "Ladrillos rojos de barro para construcción tradicional.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Ladrillo de barro"
                        },
                        new
                        {
                            Id = 68,
                            CategoriaTiendaId = 2,
                            Descripcion = "Consulta, vacunación, cirugía y cuidado de animales domésticos.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Veterinaria"
                        },
                        new
                        {
                            Id = 69,
                            CategoriaTiendaId = 2,
                            Descripcion = "Limpieza, extracciones, ortodoncia, implantes y salud bucal.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Clínica dental"
                        },
                        new
                        {
                            Id = 70,
                            CategoriaTiendaId = 2,
                            Descripcion = "Asesoría legal, defensa penal, derecho civil, contratos y familia.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Abogado"
                        },
                        new
                        {
                            Id = 71,
                            CategoriaTiendaId = 2,
                            Descripcion = "Legalización de documentos, testamentos, poderes, escrituras públicas.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Notario"
                        },
                        new
                        {
                            Id = 72,
                            CategoriaTiendaId = 2,
                            Descripcion = "Fotos de eventos, retratos, bodas, sesiones artísticas y edición.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Fotografía"
                        },
                        new
                        {
                            Id = 73,
                            CategoriaTiendaId = 2,
                            Descripcion = "Instalación y reparación de tuberías, grifos, drenajes y sistemas de agua.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Fontanería"
                        },
                        new
                        {
                            Id = 74,
                            CategoriaTiendaId = 2,
                            Descripcion = "Construcción, reparación de paredes, techos, pisos y estructuras en general.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Albañilería"
                        },
                        new
                        {
                            Id = 75,
                            CategoriaTiendaId = 2,
                            Descripcion = "Entrenamiento físico, clases grupales, máquinas, rutinas y nutrición.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Gimnasio"
                        },
                        new
                        {
                            Id = 76,
                            CategoriaTiendaId = 2,
                            Descripcion = "Tratamientos faciales, depilación, maquillaje, manicure y cuidado corporal.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Estética"
                        },
                        new
                        {
                            Id = 77,
                            CategoriaTiendaId = 2,
                            Descripcion = "Masajes relajantes, terapias, baños termales, bienestar y relajación profunda.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Spa"
                        },
                        new
                        {
                            Id = 78,
                            CategoriaTiendaId = 2,
                            Descripcion = "Examen visual, venta de lentes, monturas, lentes de contacto y accesorios.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Óptica"
                        },
                        new
                        {
                            Id = 79,
                            CategoriaTiendaId = 2,
                            Descripcion = "Cuidado infantil, actividades educativas y supervisión para niños pequeños.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Guardería"
                        },
                        new
                        {
                            Id = 80,
                            CategoriaTiendaId = 2,
                            Descripcion = "Clases de inglés, francés, alemán, español para extranjeros, etc.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Academia de idiomas"
                        },
                        new
                        {
                            Id = 81,
                            CategoriaTiendaId = 2,
                            Descripcion = "Reservas de vuelos, paquetes turísticos, hoteles y tours guiados.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Agencia de viajes"
                        },
                        new
                        {
                            Id = 82,
                            CategoriaTiendaId = 2,
                            Descripcion = "Equipo de abogados especializados en distintas áreas del derecho.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Bufete jurídico"
                        },
                        new
                        {
                            Id = 83,
                            CategoriaTiendaId = 2,
                            Descripcion = "Preparación y entrega de comida para eventos, bodas, reuniones.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Servicio de catering"
                        },
                        new
                        {
                            Id = 84,
                            CategoriaTiendaId = 2,
                            Descripcion = "Reparación de autos, motos, cambios de aceite, frenos y diagnóstico.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Taller mecánico"
                        },
                        new
                        {
                            Id = 85,
                            CategoriaTiendaId = 2,
                            Descripcion = "Instalación, mantenimiento y reparación de sistemas eléctricos residenciales.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Electricista"
                        },
                        new
                        {
                            Id = 86,
                            CategoriaTiendaId = 2,
                            Descripcion = "Logotipos, tarjetas de presentación, banners, identidad visual.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Diseño gráfico"
                        },
                        new
                        {
                            Id = 87,
                            CategoriaTiendaId = 2,
                            Descripcion = "Creación y mantenimiento de sitios web, tiendas online y plataformas.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Desarrollo web"
                        },
                        new
                        {
                            Id = 88,
                            CategoriaTiendaId = 2,
                            Descripcion = "Asesoría en gestión, finanzas, marketing y crecimiento de negocios.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Consultoría empresarial"
                        },
                        new
                        {
                            Id = 89,
                            CategoriaTiendaId = 2,
                            Descripcion = "Transporte de muebles, embalaje, carga y descarga de viviendas u oficinas.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Mudanzas"
                        },
                        new
                        {
                            Id = 90,
                            CategoriaTiendaId = 2,
                            Descripcion = "Limpieza de hogares, oficinas, ventanas, alfombras y desinfección.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Limpieza y mantenimiento"
                        },
                        new
                        {
                            Id = 91,
                            CategoriaTiendaId = 2,
                            Descripcion = "Reparación de neveras, lavadoras, hornos, microondas y más.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Reparación de electrodomésticos"
                        },
                        new
                        {
                            Id = 92,
                            CategoriaTiendaId = 2,
                            Descripcion = "Soporte técnico, redes, configuración de dispositivos y seguridad.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Tecnología y soporte IT"
                        },
                        new
                        {
                            Id = 93,
                            CategoriaTiendaId = 2,
                            Descripcion = "Taxis, delivery, mensajería, transporte de personas o mercancías.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Servicio de transporte"
                        },
                        new
                        {
                            Id = 94,
                            CategoriaTiendaId = 2,
                            Descripcion = "Bodas, cumpleaños, conferencias, decoración, logística y coordinación.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Organización de eventos"
                        },
                        new
                        {
                            Id = 95,
                            CategoriaTiendaId = 2,
                            Descripcion = "Apoyo emocional, terapia individual, parejas, ansiedad, depresión.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Terapia psicológica"
                        },
                        new
                        {
                            Id = 96,
                            CategoriaTiendaId = 2,
                            Descripcion = "Mantenimiento de jardines, poda, riego, paisajismo y limpieza exterior.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Servicio de jardinería"
                        },
                        new
                        {
                            Id = 97,
                            CategoriaTiendaId = 2,
                            Descripcion = "Estética personal, peluquería, manicure, maquillaje y venta de productos de belleza.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Salón y Boutique"
                        },
                        new
                        {
                            Id = 98,
                            CategoriaTiendaId = 2,
                            Descripcion = "Servicio de comida preparada: pupusas, platillos típicos, almuerzos económicos.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Comedor y pupusería"
                        },
                        new
                        {
                            Id = 99,
                            CategoriaTiendaId = 2,
                            Descripcion = "Asesoría legal, redacción de documentos, juicios y consultas especializadas.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Despacho jurídico"
                        },
                        new
                        {
                            Id = 100,
                            CategoriaTiendaId = 2,
                            Descripcion = "Equipo de abogados que ofrece servicios legales integrales en distintas áreas.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Bufete"
                        },
                        new
                        {
                            Id = 101,
                            CategoriaTiendaId = 2,
                            Descripcion = "Servicio de transporte privado mediante aplicación, viajes urbanos y aeropuertos.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Uber"
                        },
                        new
                        {
                            Id = 102,
                            CategoriaTiendaId = 2,
                            Descripcion = "Movilización de personas o carga en rutas fijas o contratadas.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Transporte"
                        },
                        new
                        {
                            Id = 103,
                            CategoriaTiendaId = 2,
                            Descripcion = "Carga y descarga de mercancías, mudanzas, envíos locales o intermunicipales.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Transporte y flete"
                        },
                        new
                        {
                            Id = 104,
                            CategoriaTiendaId = 2,
                            Descripcion = "Tours guiados, paseos turísticos, visitas culturales o recreativas.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Excursiones"
                        },
                        new
                        {
                            Id = 105,
                            CategoriaTiendaId = 2,
                            Descripcion = "Apertura de cerraduras, duplicado de llaves, instalación y reparación de sistemas de seguridad.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Cerrajería"
                        },
                        new
                        {
                            Id = 106,
                            CategoriaTiendaId = 2,
                            Descripcion = "Clases teóricas y prácticas para obtener licencia de conducir.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Escuela de manejo"
                        },
                        new
                        {
                            Id = 107,
                            CategoriaTiendaId = 2,
                            Descripcion = "Alquiler de vehículos por horas, días o semanas para uso personal o empresarial.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Renta de autos"
                        },
                        new
                        {
                            Id = 108,
                            CategoriaTiendaId = 2,
                            Descripcion = "Instalación, mantenimiento y monitoreo de sistemas de seguridad y alarmas.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Alarmas"
                        },
                        new
                        {
                            Id = 109,
                            CategoriaTiendaId = 2,
                            Descripcion = "Lavado, secado e ropa planchado, servicio express o por kilo.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Lavandería"
                        },
                        new
                        {
                            Id = 110,
                            CategoriaTiendaId = 2,
                            Descripcion = "Limpieza exterior e interior de vehículos, encerado, aspirado y detalles finales.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Lavado de autos"
                        },
                        new
                        {
                            Id = 111,
                            CategoriaTiendaId = 2,
                            Descripcion = "Reparación y mantenimiento de neveras, congeladores, equipos de aire acondicionado.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Taller de refrigerados"
                        },
                        new
                        {
                            Id = 112,
                            CategoriaTiendaId = 2,
                            Descripcion = "Diagnóstico, reparación y mantenimiento general de vehículos automotores.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Taller mecánico"
                        },
                        new
                        {
                            Id = 113,
                            CategoriaTiendaId = 2,
                            Descripcion = "Servicios especializados en motores, frenos, suspensión y sistemas eléctricos.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Taller automotriz"
                        },
                        new
                        {
                            Id = 114,
                            CategoriaTiendaId = 2,
                            Descripcion = "Tapicería, balanceo, alineación, cambio de cauchos y reencauche.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Reparación de llantas"
                        },
                        new
                        {
                            Id = 115,
                            CategoriaTiendaId = 2,
                            Descripcion = "Reparación móvil o en taller de vehículos, con herramientas y diagnóstico básico.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Mecánico"
                        },
                        new
                        {
                            Id = 116,
                            CategoriaTiendaId = 2,
                            Descripcion = "Tratamientos faciales, corporales, depilación láser, cuidado de la piel.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Cosmetología"
                        },
                        new
                        {
                            Id = 117,
                            CategoriaTiendaId = 2,
                            Descripcion = "Formación profesional en estética, uñas, cabello, maquillaje y spa.",
                            FechaCreacion = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Academia de cosmetología"
                        });
                });

            modelBuilder.Entity("LuvixApiServices.Models.Tienda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Portada")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Tiendas");
                });

            modelBuilder.Entity("LuvixApiServices.Models.TipoPublicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposPublicacion");
                });

            modelBuilder.Entity("LuvixApiServices.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotoPerfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Aguirre Aparicio",
                            Email = "jfaguirrex@outlook.com",
                            Estado = "activo",
                            FechaRegistro = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Juan Francisco",
                            Password = "Admin2025@"
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "Santana Martínez",
                            Email = "mesantana@gmail.com",
                            Estado = "activo",
                            FechaRegistro = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Margarita Elizabeth",
                            Password = "Admin2025@"
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "Castellanos Sánchez",
                            Email = "aycastellanos@gmail.com",
                            Estado = "activo",
                            FechaRegistro = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Andrea Yamileth",
                            Password = "Admin2025@"
                        },
                        new
                        {
                            Id = 4,
                            Apellido = "García Melgar",
                            Email = "asgarcia@gmail.com",
                            Estado = "activo",
                            FechaRegistro = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Alisson Stefany",
                            Password = "Admin2025@"
                        },
                        new
                        {
                            Id = 5,
                            Apellido = "Guerrero Mena",
                            Email = "frguerrero@gmail.com",
                            Estado = "activo",
                            FechaRegistro = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Fátima Roció",
                            Password = "Admin2025@"
                        },
                        new
                        {
                            Id = 6,
                            Apellido = "Echegoyen Henríquez",
                            Email = "ryechegoyen@gmail.com",
                            Estado = "activo",
                            FechaRegistro = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Rodrigo Yohalmo",
                            Password = "Admin2025@"
                        },
                        new
                        {
                            Id = 7,
                            Apellido = "López Ramírez",
                            Email = "odlopez@gmail.com",
                            Estado = "activo",
                            FechaRegistro = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Oscar Daniel",
                            Password = "Admin2025@"
                        });
                });

            modelBuilder.Entity("LuvixApiServices.Models.UsuarioRol", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId", "RolId");

                    b.HasIndex("RolId");

                    b.ToTable("UsuarioRoles");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            RolId = 1
                        },
                        new
                        {
                            UsuarioId = 2,
                            RolId = 1
                        },
                        new
                        {
                            UsuarioId = 3,
                            RolId = 1
                        },
                        new
                        {
                            UsuarioId = 4,
                            RolId = 1
                        },
                        new
                        {
                            UsuarioId = 5,
                            RolId = 1
                        },
                        new
                        {
                            UsuarioId = 6,
                            RolId = 1
                        },
                        new
                        {
                            UsuarioId = 7,
                            RolId = 1
                        });
                });

            modelBuilder.Entity("LuvixApiServices.Models.Comentario", b =>
                {
                    b.HasOne("LuvixApiServices.Models.Publicacion", "Publicacion")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LuvixApiServices.Models.Tienda", "Tienda")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdTienda")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LuvixApiServices.Models.Usuario", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Publicacion");

                    b.Navigation("Tienda");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LuvixApiServices.Models.ImagenPublicacion", b =>
                {
                    b.HasOne("LuvixApiServices.Models.Publicacion", "Publicacion")
                        .WithMany("Imagenes")
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");
                });

            modelBuilder.Entity("LuvixApiServices.Models.Mensaje", b =>
                {
                    b.HasOne("LuvixApiServices.Models.Tienda", "TiendaDestinatario")
                        .WithMany("MensajesRecibidos")
                        .HasForeignKey("IdTiendaDestinatario")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LuvixApiServices.Models.Tienda", "TiendaRemitente")
                        .WithMany("MensajesEnviados")
                        .HasForeignKey("IdTiendaRemitente")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LuvixApiServices.Models.Usuario", "UsuarioDestinatario")
                        .WithMany("MensajesRecibidos")
                        .HasForeignKey("IdUsuarioDestinatario")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LuvixApiServices.Models.Usuario", "UsuarioRemitente")
                        .WithMany("MensajesEnviados")
                        .HasForeignKey("IdUsuarioRemitente")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("TiendaDestinatario");

                    b.Navigation("TiendaRemitente");

                    b.Navigation("UsuarioDestinatario");

                    b.Navigation("UsuarioRemitente");
                });

            modelBuilder.Entity("LuvixApiServices.Models.Publicacion", b =>
                {
                    b.HasOne("LuvixApiServices.Models.Tienda", "Tienda")
                        .WithMany("Publicaciones")
                        .HasForeignKey("IdTienda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LuvixApiServices.Models.TipoPublicacion", "TipoPublicacion")
                        .WithMany("Publicaciones")
                        .HasForeignKey("IdTipoPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tienda");

                    b.Navigation("TipoPublicacion");
                });

            modelBuilder.Entity("LuvixApiServices.Models.RolPermiso", b =>
                {
                    b.HasOne("LuvixApiServices.Models.Permiso", "Permiso")
                        .WithMany("RolPermisos")
                        .HasForeignKey("PermisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LuvixApiServices.Models.Rol", "Rol")
                        .WithMany("RolPermisos")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("LuvixApiServices.Models.SeguidorTiendaATienda", b =>
                {
                    b.HasOne("LuvixApiServices.Models.Tienda", "TiendaSeguida")
                        .WithMany("TiendasQueLaSiguen")
                        .HasForeignKey("IdTiendaSeguida")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LuvixApiServices.Models.Tienda", "TiendaSeguidora")
                        .WithMany("TiendasQueSigue")
                        .HasForeignKey("IdTiendaSeguidora")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TiendaSeguida");

                    b.Navigation("TiendaSeguidora");
                });

            modelBuilder.Entity("LuvixApiServices.Models.SeguidorUsuarioATienda", b =>
                {
                    b.HasOne("LuvixApiServices.Models.Tienda", "Tienda")
                        .WithMany("SeguidoresUsuarios")
                        .HasForeignKey("IdTienda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LuvixApiServices.Models.Usuario", "Usuario")
                        .WithMany("TiendasQueSigue")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tienda");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LuvixApiServices.Models.SeguidorUsuarioAUsuario", b =>
                {
                    b.HasOne("LuvixApiServices.Models.Usuario", "Seguido")
                        .WithMany("Seguidores")
                        .HasForeignKey("IdSeguido")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LuvixApiServices.Models.Usuario", "Seguidor")
                        .WithMany("Siguiendo")
                        .HasForeignKey("IdSeguidor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Seguido");

                    b.Navigation("Seguidor");
                });

            modelBuilder.Entity("LuvixApiServices.Models.SubCategoria", b =>
                {
                    b.HasOne("LuvixApiServices.Models.CategoriaTienda", "CategoriaTienda")
                        .WithMany("Subcategorias")
                        .HasForeignKey("CategoriaTiendaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CategoriaTienda");
                });

            modelBuilder.Entity("LuvixApiServices.Models.Tienda", b =>
                {
                    b.HasOne("LuvixApiServices.Models.CategoriaTienda", "Categoria")
                        .WithMany("Tiendas")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LuvixApiServices.Models.Usuario", "Usuario")
                        .WithMany("Tiendas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LuvixApiServices.Models.UsuarioRol", b =>
                {
                    b.HasOne("LuvixApiServices.Models.Rol", "Rol")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LuvixApiServices.Models.Usuario", "Usuario")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LuvixApiServices.Models.CategoriaTienda", b =>
                {
                    b.Navigation("Subcategorias");

                    b.Navigation("Tiendas");
                });

            modelBuilder.Entity("LuvixApiServices.Models.Permiso", b =>
                {
                    b.Navigation("RolPermisos");
                });

            modelBuilder.Entity("LuvixApiServices.Models.Publicacion", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Imagenes");
                });

            modelBuilder.Entity("LuvixApiServices.Models.Rol", b =>
                {
                    b.Navigation("RolPermisos");

                    b.Navigation("UsuarioRoles");
                });

            modelBuilder.Entity("LuvixApiServices.Models.Tienda", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("MensajesEnviados");

                    b.Navigation("MensajesRecibidos");

                    b.Navigation("Publicaciones");

                    b.Navigation("SeguidoresUsuarios");

                    b.Navigation("TiendasQueLaSiguen");

                    b.Navigation("TiendasQueSigue");
                });

            modelBuilder.Entity("LuvixApiServices.Models.TipoPublicacion", b =>
                {
                    b.Navigation("Publicaciones");
                });

            modelBuilder.Entity("LuvixApiServices.Models.Usuario", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("MensajesEnviados");

                    b.Navigation("MensajesRecibidos");

                    b.Navigation("Seguidores");

                    b.Navigation("Siguiendo");

                    b.Navigation("Tiendas");

                    b.Navigation("TiendasQueSigue");

                    b.Navigation("UsuarioRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
