// <auto-generated />
using System;
using LuvixApiServices.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LuvixApiServices.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250915220411_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LuvixApiServices.Models.CategoriaTienda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoriasTienda");
                });

            modelBuilder.Entity("LuvixApiServices.Models.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdTienda")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPublicacion");

                    b.HasIndex("IdTienda");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("LuvixApiServices.Models.ImagenPublicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaSubida")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("int");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<string>("UrlImagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdPublicacion");

                    b.ToTable("ImagenesPublicacion");
                });

            modelBuilder.Entity("LuvixApiServices.Models.Mensaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdTiendaDestinatario")
                        .HasColumnType("int");

                    b.Property<int?>("IdTiendaRemitente")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioDestinatario")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioRemitente")
                        .HasColumnType("int");

                    b.Property<bool>("Leido")
                        .HasColumnType("bit");

                    b.Property<string>("MensajeTexto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTiendaDestinatario");

                    b.HasIndex("IdTiendaRemitente");

                    b.HasIndex("IdUsuarioDestinatario");

                    b.HasIndex("IdUsuarioRemitente");

                    b.ToTable("Mensajes");
                });

            modelBuilder.Entity("LuvixApiServices.Models.Publicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTienda")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPublicacion")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTienda");

                    b.HasIndex("IdTipoPublicacion");

                    b.ToTable("Publicaciones");
                });

            modelBuilder.Entity("LuvixApiServices.Models.SeguidorTiendaATienda", b =>
                {
                    b.Property<int>("IdTiendaSeguidora")
                        .HasColumnType("int");

                    b.Property<int>("IdTiendaSeguida")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaSeguimiento")
                        .HasColumnType("datetime2");

                    b.HasKey("IdTiendaSeguidora", "IdTiendaSeguida");

                    b.HasIndex("IdTiendaSeguida");

                    b.ToTable("SeguidoresTiendaATienda");
                });

            modelBuilder.Entity("LuvixApiServices.Models.SeguidorUsuarioATienda", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdTienda")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaSeguimiento")
                        .HasColumnType("datetime2");

                    b.HasKey("IdUsuario", "IdTienda");

                    b.HasIndex("IdTienda");

                    b.ToTable("SeguidoresUsuarioATienda");
                });

            modelBuilder.Entity("LuvixApiServices.Models.SeguidorUsuarioAUsuario", b =>
                {
                    b.Property<int>("IdSeguidor")
                        .HasColumnType("int");

                    b.Property<int>("IdSeguido")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaSeguimiento")
                        .HasColumnType("datetime2");

                    b.HasKey("IdSeguidor", "IdSeguido");

                    b.HasIndex("IdSeguido");

                    b.ToTable("SeguidoresUsuarioAUsuario");
                });

            modelBuilder.Entity("LuvixApiServices.Models.Tienda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Portada")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Tiendas");
                });

            modelBuilder.Entity("LuvixApiServices.Models.TipoPublicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposPublicacion");
                });

            modelBuilder.Entity("LuvixApiServices.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotoPerfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("LuvixApiServices.Models.Comentario", b =>
                {
                    b.HasOne("LuvixApiServices.Models.Publicacion", "Publicacion")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LuvixApiServices.Models.Tienda", "Tienda")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdTienda")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LuvixApiServices.Models.Usuario", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Publicacion");

                    b.Navigation("Tienda");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LuvixApiServices.Models.ImagenPublicacion", b =>
                {
                    b.HasOne("LuvixApiServices.Models.Publicacion", "Publicacion")
                        .WithMany("Imagenes")
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");
                });

            modelBuilder.Entity("LuvixApiServices.Models.Mensaje", b =>
                {
                    b.HasOne("LuvixApiServices.Models.Tienda", "TiendaDestinatario")
                        .WithMany("MensajesRecibidos")
                        .HasForeignKey("IdTiendaDestinatario")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LuvixApiServices.Models.Tienda", "TiendaRemitente")
                        .WithMany("MensajesEnviados")
                        .HasForeignKey("IdTiendaRemitente")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LuvixApiServices.Models.Usuario", "UsuarioDestinatario")
                        .WithMany("MensajesRecibidos")
                        .HasForeignKey("IdUsuarioDestinatario")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LuvixApiServices.Models.Usuario", "UsuarioRemitente")
                        .WithMany("MensajesEnviados")
                        .HasForeignKey("IdUsuarioRemitente")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("TiendaDestinatario");

                    b.Navigation("TiendaRemitente");

                    b.Navigation("UsuarioDestinatario");

                    b.Navigation("UsuarioRemitente");
                });

            modelBuilder.Entity("LuvixApiServices.Models.Publicacion", b =>
                {
                    b.HasOne("LuvixApiServices.Models.Tienda", "Tienda")
                        .WithMany("Publicaciones")
                        .HasForeignKey("IdTienda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LuvixApiServices.Models.TipoPublicacion", "TipoPublicacion")
                        .WithMany("Publicaciones")
                        .HasForeignKey("IdTipoPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tienda");

                    b.Navigation("TipoPublicacion");
                });

            modelBuilder.Entity("LuvixApiServices.Models.SeguidorTiendaATienda", b =>
                {
                    b.HasOne("LuvixApiServices.Models.Tienda", "TiendaSeguida")
                        .WithMany("TiendasQueLaSiguen")
                        .HasForeignKey("IdTiendaSeguida")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LuvixApiServices.Models.Tienda", "TiendaSeguidora")
                        .WithMany("TiendasQueSigue")
                        .HasForeignKey("IdTiendaSeguidora")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TiendaSeguida");

                    b.Navigation("TiendaSeguidora");
                });

            modelBuilder.Entity("LuvixApiServices.Models.SeguidorUsuarioATienda", b =>
                {
                    b.HasOne("LuvixApiServices.Models.Tienda", "Tienda")
                        .WithMany("SeguidoresUsuarios")
                        .HasForeignKey("IdTienda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LuvixApiServices.Models.Usuario", "Usuario")
                        .WithMany("TiendasQueSigue")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tienda");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LuvixApiServices.Models.SeguidorUsuarioAUsuario", b =>
                {
                    b.HasOne("LuvixApiServices.Models.Usuario", "Seguido")
                        .WithMany("Seguidores")
                        .HasForeignKey("IdSeguido")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LuvixApiServices.Models.Usuario", "Seguidor")
                        .WithMany("Siguiendo")
                        .HasForeignKey("IdSeguidor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Seguido");

                    b.Navigation("Seguidor");
                });

            modelBuilder.Entity("LuvixApiServices.Models.Tienda", b =>
                {
                    b.HasOne("LuvixApiServices.Models.CategoriaTienda", "Categoria")
                        .WithMany("Tiendas")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LuvixApiServices.Models.Usuario", "Usuario")
                        .WithMany("Tiendas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LuvixApiServices.Models.CategoriaTienda", b =>
                {
                    b.Navigation("Tiendas");
                });

            modelBuilder.Entity("LuvixApiServices.Models.Publicacion", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Imagenes");
                });

            modelBuilder.Entity("LuvixApiServices.Models.Tienda", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("MensajesEnviados");

                    b.Navigation("MensajesRecibidos");

                    b.Navigation("Publicaciones");

                    b.Navigation("SeguidoresUsuarios");

                    b.Navigation("TiendasQueLaSiguen");

                    b.Navigation("TiendasQueSigue");
                });

            modelBuilder.Entity("LuvixApiServices.Models.TipoPublicacion", b =>
                {
                    b.Navigation("Publicaciones");
                });

            modelBuilder.Entity("LuvixApiServices.Models.Usuario", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("MensajesEnviados");

                    b.Navigation("MensajesRecibidos");

                    b.Navigation("Seguidores");

                    b.Navigation("Siguiendo");

                    b.Navigation("Tiendas");

                    b.Navigation("TiendasQueSigue");
                });
#pragma warning restore 612, 618
        }
    }
}
